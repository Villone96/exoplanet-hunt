<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="import seaborn as sns%%00010import matplotlib.pyplot as plt%%00010# Copy input to output%%00010output_table = input_table.copy()%%00010star_colors = ['#fc0303','#fc8403','#fcf403', '#fffb91', '#cad7ff','#aabfff','#9bb0ff']%%00010star_palette = dict(O=star_colors[6], B=star_colors[5], A=star_colors[4], F=star_colors[3], %%00010                             G=star_colors[2],K=star_colors[1],M=star_colors[0])%%00010%%00010sns.set_context('talk')%%00010plt.figure(figsize=(17,10))%%00010ax = sns.scatterplot(x='star_radius',y='star_gravity', data=input_table, %%00010                hue='star_spectral_class', hue_order=['O','B','A','F','G','K','M'],%%00010                palette=star_palette, %%00010                markers = '.',%%00010                alpha=0.4,%%00010                linewidth=0,%%00010                size = 'star_radius')%%00010%%00010ax.set(xlabel='Star Radius', ylabel='Star Gravity')%%00010plt.xlabel(&quot;Star Radius&quot;, fontsize = 23)%%00010plt.ylabel(&quot;Star Gravity&quot;, fontsize = 23)%%00010plt.legend(fontsize = 15, markerscale=1)%%00010%%00010plt.title('Star Gravity vs. Star Radius', fontsize = 23)%%00010plt.show()%%00010%%00010'''%%00010grid = sns.JointGrid(x='star_radius',y='star_gravity',data=input_table)%%00010%%00010g = grid.plot_joint(sns.scatterplot, data=input_table, %%00010                hue='star_spectral_class', hue_order=['O','B','A','F','G','K','M'],%%00010                palette=star_palette, %%00010                markers = '.',%%00010                alpha=0.4,%%00010                linewidth=0,%%00010                size = 'star_radius')%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='O', 'star_radius'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='O', 'star_gravity'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='B', 'star_radius'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='B', 'star_gravity'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='A', 'star_radius'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='A', 'star_gravity'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='F', 'star_radius'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='F', 'star_gravity'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='G', 'star_radius'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='G', 'star_gravity'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='K', 'star_radius'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='K', 'star_gravity'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='M', 'star_radius'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['star_spectral_class']=='M', 'star_gravity'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010plt.show()%%00010'''"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="python3"/>
<entry key="python2Command" type="xstring" value=""/>
<entry key="python3Command" type="xstring" value=""/>
<entry key="chunkSize" type="xint" value="500000"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="Gravity vs Radius"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="869"/>
<entry key="y-coordinate" type="xint" value="559"/>
<entry key="width" type="xint" value="104"/>
<entry key="height" type="xint" value="13"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="11"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="CONFIGURED"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.script.Python2ScriptNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.0.0.v201906190741"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.0.0.v201906241606"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>

<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="# Copy input to output%%00010%%00010import matplotlib.pyplot as plt%%00010%%00010import seaborn as sns%%00010output_table = input_table.copy()%%00010%%00010fig = plt.figure(figsize=(20,10))%%00010%%00010cluster = list()%%00010%%00010for _, row in output_table.iterrows():%%00010%%00009if row['Cluster'] == &quot;cluster_0&quot;:%%00010%%00009%%00009cluster.append(&quot;Cluster 1&quot;)%%00010%%00009elif row['Cluster'] == &quot;cluster_1&quot;:%%00010%%00009%%00009cluster.append(&quot;Cluster 2&quot;)%%00010%%00009elif row['Cluster'] == &quot;cluster_2&quot;:%%00010%%00009%%00009cluster.append(&quot;Cluster 3&quot;)%%00010%%00010del output_table['Cluster']%%00010output_table['Cluster'] = cluster%%00010%%00010%%00010%%00010%%00010%%00010%%00010'''kmp1 = sns.scatterplot(x='star_gravity',y='star_temperature',data=input_table,%%00010                    linewidth=0, alpha=0.9,%%00010                    size='star_radius',%%00010                    hue='Cluster')%%00010%%00010kmp1.set_xlabel('surface gravity')%%00010kmp1.set_ylabel('temperature')%%00010%%00010    %%00010%%00010plt.title('Gravity vs. Temperature, with Radius as marker size')%%00010%%00010plt.show()'''%%00010%%00010grid = sns.JointGrid(x='star_gravity',y='star_temperature',data=output_table)%%00010%%00010g = grid.plot_joint(sns.scatterplot, hue='Cluster', data=output_table, size='star_radius')%%00010sns.kdeplot(input_table.loc[input_table['Cluster']=='cluster_0', 'star_gravity'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['Cluster']=='cluster_0', 'star_temperature'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['Cluster']=='cluster_1', 'star_gravity'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['Cluster']=='cluster_1', 'star_temperature'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['Cluster']=='cluster_2', 'star_gravity'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['Cluster']=='cluster_2', 'star_temperature'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['Cluster']=='cluster_3', 'star_gravity'], ax=g.ax_marg_x, legend=False, shade = True)%%00010sns.kdeplot(input_table.loc[input_table['Cluster']=='cluster_3', 'star_temperature'], ax=g.ax_marg_y, vertical=True, legend=False, shade = True)%%00010plt.show()"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="python3"/>
<entry key="python2Command" type="xstring" value=""/>
<entry key="python3Command" type="xstring" value=""/>
<entry key="chunkSize" type="xint" value="500000"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="Cluster Plot"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="909"/>
<entry key="y-coordinate" type="xint" value="319"/>
<entry key="width" type="xint" value="104"/>
<entry key="height" type="xint" value="13"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="11"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="EXECUTED"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.script.Python2ScriptNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.0.0.v201906190741"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.0.0.v201906241606"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="hasContent" type="xboolean" value="true"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
<entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
<entry key="port_object_summary" type="xstring" value="Rows: 9563, Cols: 5"/>
<entry key="port_dir_location" type="xstring" value="port_1"/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" value="3e41832d-2446-4e28-8714-03bae3686421"/>
</config>
</config>
